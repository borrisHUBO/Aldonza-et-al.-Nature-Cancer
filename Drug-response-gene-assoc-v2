import numpy as np
import csv
import matplotlib.pyplot as plt
import seaborn as sns
from scipy.stats import spearmanr
import math
import statistics

# Get corresponding gene names of cosmic IDs
cell_id = {}

with open('datasets/cosmic_id.csv', newline='') as csvfile:
	reader = csv.DictReader(csvfile)
	for row in reader:
		cell_id[row['COSMIC_ID']] = row['Name']

# Perform computation
wanted_genes = ['FUT1', 'FUT2', 'FUT3', 'FUT5', 'FUT6', 'FUT7', 'FUT8', 'FUT9', 'FUT10', 'FUT11', 'POFUT1', 'POFUT2']

gene_list = ['', '', '', '', '', '', '', '', '', '', '', '']
expression_dataset = [[], [], [], [], [], [], [], [], [], [], [], []] 

with open('datasets/expression_input.csv', newline='') as csvfile:
	reader = csv.DictReader(csvfile)
	for row in reader:
		gene = row['\ufeffGENE_SYMBOLS']
		if gene in wanted_genes:
			gene_list[wanted_genes.index(gene)] = gene
			del row['\ufeffGENE_SYMBOLS']
			expression_dataset[wanted_genes.index(gene)] = row

drug_dataset = {}
with open('datasets/GDSC2_fitted_dose_response_15Oct19.csv', newline='') as csvfile:
	reader = csv.DictReader(csvfile)
	for row in reader:
		cosmic_id = row['COSMIC_ID']
		ln_ic50 = row['LN_IC50']
		drug_name = row['DRUG_NAME']
		if drug_name not in drug_dataset.keys():
			drug_dataset[drug_name] = [(cosmic_id, ln_ic50)]
		else:
			drug_dataset[drug_name].append((cosmic_id, ln_ic50))
	#print(len(drug_dataset))

cl_groups_dataset = {}
with open('datasets/cl_groups.csv', newline='') as csvfile:
	reader = csv.DictReader(csvfile)
	for row in reader:
		cosmic_id = row['COSMIC_ID']
		cl_group = row['TYPE']
		if cl_group not in ['', 'UNABLE TO CLASSIFY']:
			if cl_group in cl_groups_dataset.keys():
				cl_groups_dataset[cl_group].append(cosmic_id)
			else:
				cl_groups_dataset[cl_group] = [cosmic_id]
#print(cl_groups_dataset)

heatmap_matrix_expression = np.zeros((len(gene_list),len(cl_groups_dataset)))
heatmap_matrix_spearman = np.zeros((len(gene_list),len(cl_groups_dataset)))

for gene_index, gene in enumerate(expression_dataset):
	cell_line_expression = {}
	cell_line_drug = {}
	for cell_line, expression_value in gene.items():
		cell_line_expression[cell_line[5:]] = expression_value
		cell_line_drug[cell_line[5:]] = 'x'

	for drug, cell_line_list in drug_dataset.items():
		for (cell_line, drug_value) in cell_line_list:
			if cell_line not in cell_line_drug.keys():
				cell_line_expression[cell_line] = 'x'
			cell_line_drug[cell_line] = drug_value

	group_index = 0
	for group, cell_line_list in cl_groups_dataset.items():
		cl_exp_list = []
		cl_drug_list = []
		for cell_line in cell_line_list:
			try:
				cl_expression = cell_line_expression[cell_line]
				cl_drug_response = cell_line_drug[cell_line]
				if cl_expression != 'x' and cl_drug_response != 'x':
					cl_exp_list.append(float(cl_expression))
					cl_drug_list.append(float(cl_drug_response))
			except KeyError:
				pass

		#print(cl_drug_list)
		heatmap_matrix_expression[gene_index][group_index] = statistics.mean(cl_exp_list)

		rho, p = spearmanr(cl_exp_list, cl_drug_list)
		if math.isnan(rho):
			rho = 0
		heatmap_matrix_spearman[gene_index][group_index] = rho

		group_index += 1

ax = sns.heatmap(heatmap_matrix_expression, cmap='Greens', xticklabels=True, yticklabels=True)
ax.set_xticklabels(list(cl_groups_dataset.keys()), rotation=90)
ax.set_yticklabels(gene_list, rotation=0)
plt.savefig('images/fig1_expression.png', dpi=1200)
plt.close()

ax = sns.heatmap(heatmap_matrix_spearman, cmap='bwr', xticklabels=True, yticklabels=True)
ax.set_xticklabels(list(cl_groups_dataset.keys()), rotation=90)
ax.set_yticklabels(gene_list, rotation=0)
plt.savefig('images/fig1_spearman.png', dpi=1200)
plt.close()
